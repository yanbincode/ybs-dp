1、面向对象：活字印刷术

2、面向对象的好处：低耦合，可维护，可扩展，可复用，灵活性好

3、面向对象的特性：封装、继承、多态

4、单一原则（SRP）：就一个类而言，应该仅有一个引起它变化的原因。
        
        开放-封闭原则 （The Open-Closed Principle OCP）：软件实体（类、模块、函数等），应该可以扩展，但是不可以修改
        
        依赖倒转原则 ：A、高层模块不应该依赖低层模块。两个都应该依赖抽象。B、抽象不应该依赖细节。细节应该依赖抽象。
        
        里氏代换原则 （LSP）：子类型必须能够替换掉它们的父类型。
        
        迪米特法则（LoD）：如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发调用。
        
        组合/聚合复用原则（CARP） ：尽量使用组合/聚合，尽量不要使用类继承。
        
5、浅复制：复制对象及对象的原型属性。对于对象属性，只复制引用，原对象属性的值会被拷贝的对象修改。
       深复制：复制对象及对象的原型属性，并复制对象属性时，只复制值却是新的引用，新对象修改不会影响原对象。

